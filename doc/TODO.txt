This is the project TODO list. It contains the wish list of Aiaiai author and
users. Feel free to send your requests to the Aiaiai mailing list. Remembere,
these are just wishes, and we do not necessarily have any specific plans
implementing them.


* Improve user-friendliness.
  * Separate all the e-mail front-end stuff to "doc/email".
  * Improve the the e-mail front-end configuration file. Make all the variables
    containing the text for end-users to refer instead. Just like
    email.preamble refers the file, which contains the preamble. This is more
    flexible and consistent.
  * Move command-line options of 'aiaiai-email-*' scripts to the configuration
    file. This should make it simpler for users to configure the whole thing
    when all the knobs are in one place. Just make each script to parse the
    config file and pick own configuration from there. Namely, most of
    the 'aiaiai-email-dispatcher', 'aiaiai-email-testpatchset', and
    'aiaiai-email-lda' options have to go away.
  * Additional item for the previous one: aiaiai-email-dispatcher is too
    difficutl to execute because it requires the "<validator>" argument.
    But there is only one validator which makes sense in Aiaiai context
    - "aiaiai-email-test-patchset". So remove the silly argument and
    just run the validator, without exposing unnecessary complexity to
    the user.
  * Start assigning versions to the scripts and do official releases, with
    signed tags, and tarballs.
  * Provide packages for various distributions. Including packages for the
    'smack' validation tool, because distros do not provide it.
  * Describe the coding style and various shell tricks in a separate file, in
    order to make it easier for people to start hacking Aiaiai.
  * Describe how the e-mail front-end distinguish patches and collects
    patch-sets.
  * Teach the scripts to compile 'remap-log' if it is not compiled,
    instead of just failing. This is probably more user-friendly.
  * Describe some review policy, e.g., how many days I promise to wait
    for review/reply before applying patches.
  * Re-arrange the source code structure so that the internal scripts
    would all sit in a separate sub-directory. Internal scripts are
    those which users are not supposed to run directly. For example,
    'aiaiai-locker' is one of them.

* Functional improvements
  * Gcc 4.8 change the format of warnings and now they look like this:

    arch/x86/kernel/e820.c: In function ‘e820_setup_gap’:
    arch/x86/kernel/e820.c:630:6: warning: variable ‘found’ set but not used [-Wunused-but-set-variable]
      int found;
          ^
    Aiaiai does not process them correctly which leads to ugly diffs. Fix this.
  * Stop carrying own copy of coccinelle. Just use the ones from the
    project kernel tree. This is better because our own copy tend to get
    out-of-date.
  * We hard-code 'KCFLAGS='-Wno-missing-field-initializers
    -Wno-sign-compare' and W=1 in 'aiaiai-make-kernel'. This is not that
    nice. It is better to make these things to be the default value of
    the -M parameter. The users could disable them or re-define easily.
